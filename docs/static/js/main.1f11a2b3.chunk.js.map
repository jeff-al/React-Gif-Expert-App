{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setInputValue","onSubmit","e","preventDefault","trim","categories","type","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","divRoot","document","getElementById","ReactDOM","render","GifExpertApp"],"mappings":"2MAqCeA,EAlCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACkB,KAAjBJ,EAAMK,SACLP,GAAe,SAAAQ,GAAU,OAAKN,GAAL,mBAAeM,OACxCL,EAAc,MAMd,SACI,uBACIM,KAAK,OACLC,YAAY,uBACZR,MAAQA,EACRS,SAnBU,SAACN,GACvBF,EAAcE,EAAEO,OAAOV,e,+BCRlBW,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEH,mCAEVC,EAJa,iDAImCC,UAAUH,GAJ7C,6BAEH,oCAFG,SAKAI,MAAMF,GALN,cAKbG,EALa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,IAC1B,MAAO,CACCC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BZ,QAb5B,kBAiBZM,GAjBY,4CAAH,sDCULO,EAVK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCqBFO,EAvBC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEhB,ECDwB,SAAEA,GAE1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAKGqB,EDtB2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAEOH,EAAOJ,KAAK,SAAEC,GAAF,OAAW,cAAC,EAAD,eAEdA,GADCA,EAAIC,aEanBgB,EAzBO,WAElB,MAAoCxC,mBAAS,CAAC,WAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQQ,EAAWe,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CACIA,SAAWA,GACLA,YCd5B4B,EAAUC,SAASC,eAAe,QAExCC,IAASC,OACL,cAACC,EAAD,IACAL,K","file":"static/js/main.1f11a2b3.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [value, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(value.trim() !== \"\"){\r\n            setCategories( categories => [value, ...categories])\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Agregar CategorÃ­a\"\r\n                    value={ value }\r\n                    onChange={ handleInputChange }\r\n                ></input>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async ( category ) => {\r\n    \r\n    const API_KEY = \"hVTXX3bcmJKiVQvYHc2LPdIshW8pHJSg\";\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${API_KEY}`\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium?.url, \r\n            }\r\n    });\r\n\r\n    return gifs;\r\n}","const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\"\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h2>{ category }</h2>  \r\n\r\n            { loading && <p>Loading...</p>}\r\n\r\n            {<div className=\"card-grid\">\r\n                { \r\n                    images.map( ( img ) => <GifGridItem \r\n                        key={ img.id } \r\n                        { ...img }\r\n                        /> \r\n                    )\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Keylor\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => \r\n                        <GifGrid \r\n                            category={ category }\r\n                            key={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n} \r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\"\n\nconst divRoot = document.getElementById(\"root\");\n\nReactDOM.render(\n    <GifExpertApp />,\n    divRoot\n);\n\n"],"sourceRoot":""}